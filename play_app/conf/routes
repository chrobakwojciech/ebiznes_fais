
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

##### API #########
# Auth
POST        /api/auth/signup                 controllers.api.AuthenticationApiController.signUp
POST        /api/auth/signin                 controllers.api.AuthenticationApiController.signIn
GET         /api/auth/me                     controllers.api.AuthenticationApiController.me

# Users
#GET         /api/users                      controllers.api.UserApiController.getAll
#GET         /api/users/:userId              controllers.api.UserApiController.get(userId: String)
#POST        /api/users                      controllers.api.UserApiController.create
#PUT         /api/users/:userId              controllers.api.UserApiController.update(userId: String)
#DELETE      /api/users/:userId              controllers.api.UserApiController.delete(userId: String)

# Actors
GET         /api/actors                     controllers.api.ActorApiController.getAll
GET         /api/actors/:actorId            controllers.api.ActorApiController.get(actorId: String)
POST        /api/actors                     controllers.api.ActorApiController.create
PUT         /api/actors/:actorId            controllers.api.ActorApiController.update(actorId: String)
DELETE      /api/actors/:actorId            controllers.api.ActorApiController.delete(actorId: String)

# Directors
GET         /api/directors                  controllers.api.DirectorApiController.getAll
GET         /api/directors/:directorId      controllers.api.DirectorApiController.get(directorId: String)
POST        /api/directors                  controllers.api.DirectorApiController.create
PUT         /api/directors/:directorId      controllers.api.DirectorApiController.update(directorId: String)
DELETE      /api/directors/:directorId      controllers.api.DirectorApiController.delete(directorId: String)

# Genres
GET         /api/genres                     controllers.api.GenreApiController.getAll
GET         /api/genres/:genreId/movies     controllers.api.GenreApiController.getMovies(genreId: String)
GET         /api/genres/:genreId            controllers.api.GenreApiController.get(genreId: String)
POST        /api/genres                     controllers.api.GenreApiController.create
PUT         /api/genres/:genreId            controllers.api.GenreApiController.update(genreId: String)
DELETE      /api/genres/:genreId            controllers.api.GenreApiController.delete(genreId: String)

# Payments
GET         /api/payments                   controllers.api.PaymentApiController.getAll
GET         /api/payments/:paymentId        controllers.api.PaymentApiController.get(paymentId: String)
POST        /api/payments                   controllers.api.PaymentApiController.create
PUT         /api/payments/:paymentId        controllers.api.PaymentApiController.update(paymentId: String)
DELETE      /api/payments/:paymentId        controllers.api.PaymentApiController.delete(paymentId: String)

# Comments
GET         /api/comments                   controllers.api.CommentApiController.getAll
GET         /api/comments/:commentId        controllers.api.CommentApiController.get(commentId: String)
POST        /api/comments                   controllers.api.CommentApiController.create
PUT         /api/comments/:commentId        controllers.api.CommentApiController.update(commentId: String)
DELETE      /api/comments/:commentId        controllers.api.CommentApiController.delete(commentId: String)

# Ratings
GET         /api/ratings                    controllers.api.RatingApiController.getAll
GET         /api/ratings/:ratingId          controllers.api.RatingApiController.get(ratingId: String)
POST        /api/ratings                    controllers.api.RatingApiController.create
PUT         /api/ratings/:ratingId          controllers.api.RatingApiController.update(ratingId: String)
DELETE      /api/ratings/:ratingId          controllers.api.RatingApiController.delete(ratingId: String)

# Movies
GET         /api/movies                     controllers.api.MovieApiController.getAll
GET         /api/movies/:movieId            controllers.api.MovieApiController.get(movieId: String)
GET         /api/movies/:movieId/actors     controllers.api.MovieApiController.getActors(movieId: String)
GET         /api/movies/:movieId/directors  controllers.api.MovieApiController.getDirectors(movieId: String)
GET         /api/movies/:movieId/genres     controllers.api.MovieApiController.getGenres(movieId: String)
GET         /api/movies/:movieId/comments   controllers.api.MovieApiController.getComments(movieId: String)
GET         /api/movies/:movieId/ratings    controllers.api.MovieApiController.getRatings(movieId: String)
POST        /api/movies                     controllers.api.MovieApiController.create
PUT         /api/movies/:movieId            controllers.api.MovieApiController.update(movieId: String)
DELETE      /api/movies/:movieId            controllers.api.MovieApiController.delete(movieId: String)

# Orders
GET         /api/orders                    controllers.api.OrderApiController.getAll
GET         /api/orders/:orderId           controllers.api.OrderApiController.get(orderId: String)
POST        /api/orders                    controllers.api.OrderApiController.create
PUT         /api/orders/:orderId           controllers.api.OrderApiController.update(orderId: String)
DELETE      /api/orders/:orderId           controllers.api.OrderApiController.delete(orderId: String)



##### FORMS ######
# Auth
GET         /auth/signup                    controllers.AuthenticationController.signUp
GET         /auth/signin                    controllers.AuthenticationController.signIn
GET         /auth/signout                   controllers.AuthenticationController.signOut
POST        /auth/signInHandler             controllers.AuthenticationController.signInHandler
POST        /auth/signUpHandler             controllers.AuthenticationController.signUpHandler

# Movies
GET         /movies                         controllers.MovieController.getAll
GET         /movies/:movieId                controllers.MovieController.get(movieId: String)
GET         /add/movies                     controllers.MovieController.create
GET         /delete/movies/:movieId         controllers.MovieController.delete(movieId: String)
GET         /update/movies/:movieId         controllers.MovieController.update(movieId: String)
POST        /createMovieHandler             controllers.MovieController.createMovieHandler
POST        /updateMovieHandler             controllers.MovieController.updateMovieHandler(movieId: String)

# Comments
GET         /comments                       controllers.CommentController.getAll
GET         /add/comments                   controllers.CommentController.create
GET         /delete/comments/:commentId     controllers.CommentController.delete(commentId: String)
GET         /update/comments/:commentId     controllers.CommentController.update(commentId: String)
POST        /createCommentHandler           controllers.CommentController.createCommentHandler
POST        /updateCommentHandler           controllers.CommentController.updateCommentHandler(commentId: String)

# Ratings
GET         /ratings                        controllers.RatingController.getAll
GET         /add/ratings                    controllers.RatingController.create
GET         /delete/ratings/:ratingId       controllers.RatingController.delete(ratingId: String)
GET         /update/ratings/:ratingId       controllers.RatingController.update(ratingId: String)
POST        /createRatingHandler            controllers.RatingController.createRatingHandler
POST        /updateRatingHandler            controllers.RatingController.updateRatingHandler(ratingId: String)

# Actors
GET         /actors                         controllers.ActorController.getAll
GET         /actors/:actorId                controllers.ActorController.get(actorId: String)
GET         /add/actors                     controllers.ActorController.create
GET         /delete/actors/:actorId         controllers.ActorController.delete(actorId: String)
GET         /update/actors/:actorId         controllers.ActorController.update(actorId: String)
POST        /createActorHandler             controllers.ActorController.createActorHandler
POST        /updateActorHandler             controllers.ActorController.updateActorHandler(actorId: String)

# Directors
GET         /directors                      controllers.DirectorController.getAll
GET         /directors/:directorId          controllers.DirectorController.get(directorId: String)
GET         /add/directors                  controllers.DirectorController.create
GET         /delete/directors/:directorId   controllers.DirectorController.delete(directorId: String)
GET         /update/directors/:directorId   controllers.DirectorController.update(directorId: String)
POST        /createDirectorHandler          controllers.DirectorController.createDirectorHandler
POST        /updateDirectorHandler          controllers.DirectorController.updateDirectorHandler(directorId: String)

# Genres
GET         /genres                         controllers.GenreController.getAll
GET         /genres/:genreId                controllers.GenreController.get(genreId: String)
GET         /add/genres                     controllers.GenreController.create
GET         /delete/genres/:genreId         controllers.GenreController.delete(genreId: String)
GET         /update/genres/:genreId         controllers.GenreController.update(genreId: String)
POST        /createGenreHandler             controllers.GenreController.createGenreHandler
POST        /updateGenreHandler             controllers.GenreController.updateGenreHandler(genreId: String)

# Orders
GET         /orders                         controllers.OrderController.getAll
GET         /orders/:orderId                controllers.OrderController.get(orderId: String)
GET         /add/orders                     controllers.OrderController.create
GET         /delete/orders/:orderId         controllers.OrderController.delete(orderId: String)
GET         /update/orders/:orderId         controllers.OrderController.update(orderId: String)
POST        /createOrderHandler             controllers.OrderController.createOrderHandler
POST        /updateOrderHandler             controllers.OrderController.updateOrderHandler(orderId: String)

# Payments
GET         /payments                       controllers.PaymentController.getAll
GET         /add/payments                   controllers.PaymentController.create
GET         /delete/payment/:paymentId      controllers.PaymentController.delete(paymentId: String)
GET         /update/payment/:paymentId      controllers.PaymentController.update(paymentId: String)
POST        /createPaymentHandler           controllers.PaymentController.createPaymentHandler
POST        /updatePaymentHandler           controllers.PaymentController.updatePaymentHandler(paymentId: String)
